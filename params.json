{"name":"Gimage","tagline":"A simple PHP library for easy image handling.","body":"# GImage\r\n\r\n[![Build Status](https://travis-ci.org/quintana-dev/gimage.svg?branch=master)](https://travis-ci.org/quintana-dev/gimage) [![Latest Stable Version](https://poser.pugx.org/joseluisq/gimage/version)](https://packagist.org/packages/joseluisq/gimage) [![Latest Unstable Version](https://poser.pugx.org/joseluisq/gimage/v/unstable)](//packagist.org/packages/joseluisq/gimage) [![Total Downloads](https://poser.pugx.org/joseluisq/gimage/downloads)](https://packagist.org/packages/joseluisq/gimage) [![License](https://poser.pugx.org/joseluisq/gimage/license)](https://packagist.org/packages/joseluisq/gimage)\r\n\r\n> A simple PHP library for easy image handling.\r\n\r\nGImage is a simple extended library based on [PHP Image Processing and GD](http://php.net/manual/en/book.image.php) for easy image handling. With GImage you can read, create, crop, resize, rotate, embed text, merge and save your JPG or PNG images easy. GImage require **PHP 5.3** or higher and [GD Extension](http://php.net/manual/en/book.image.php).\r\n\r\n![A simple presentation card with GImage](https://cloud.githubusercontent.com/assets/1700322/11167177/21e9f6ca-8b25-11e5-8737-c50a48506f17.png)\r\n\r\n[*View sample code*](#creating-a-simple-presentation-card)\r\n\r\n## Install\r\n\r\n```sh\r\n$ composer require joseluisq/gimage\r\n```\r\n\r\n## Usage\r\n\r\n### Basic\r\n\r\nWorking with external JPG image and output on browser as PNG format.\r\n\r\n```php\r\n<?php\r\nrequire 'src/gutils.php';\r\nrequire 'src/gimage.php';\r\n\r\n// Loading an image (200x200) from an URL (or local path)\r\n$avatar = new GImage();\r\n$avatar->load('http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200.jpg');\r\n// Scaling to 50% (100x100)\r\n$avatar->scale(50);\r\n// Changing to PNG format\r\n$avatar->toPNG();\r\n// Preserving the image before saving or outputting\r\n$avatar->preserve();\r\n// Saving to local path\r\n$avatar->save('my-avatar.png');\r\n// Preparing for destroy the resource after outputting\r\n$avatar->preserve(false);\r\n// Outputting on the browser and destroy the resource.\r\n$avatar->output();\r\n```\r\n\r\n### Using GFigure\r\n\r\nCreating a simple green rectangle.\r\n\r\n```php\r\n<?php\r\nrequire 'src/gutils.php';\r\nrequire 'src/gfigure.php';\r\nrequire 'src/gimage.php';\r\n\r\n// Setting rectangle sizes\r\n$rectangle = new GFigure(500, 300);\r\n// Setting a green background color\r\n$rectangle->setBackgroundColor(170, 188, 147);\r\n// Creating the figure\r\n$rectangle->create();\r\n// Outputting JPG image (by default) on the browser.\r\n$rectangle->output();\r\n```\r\n\r\n### Creating a simple presentation card\r\nCreating a simple presentation card with GImage, GCanvas, GFigure and GText.\r\n\r\n```php\r\n<?php\r\nrequire 'src/gutils.php';\r\nrequire 'src/gimage.php';\r\nrequire 'src/gfigure.php';\r\nrequire 'src/gtext.php';\r\nrequire 'src/gcanvas.php';\r\n\r\n$avatar_image = new GImage();\r\n$avatar_image->load('http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=100.jpg');\r\n$avatar_image->setTop(60);\r\n$avatar_image->setLeft(70);\r\n\r\n$about_text = new GText(\"MY AWESOME PRESENTATION CARD GENERATED WITH GIMAGE\");\r\n$about_text->setSize(16);\r\n$about_text->setWidth(300);\r\n$about_text->setLeft(210);\r\n$about_text->setTop(75);\r\n$about_text->setColor(204, 164, 116);\r\n$about_text->setFontface('fonts/Lato-Light.ttf');\r\n\r\n$twitter_text = new GText('@username');\r\n$twitter_text->setSize(11);\r\n$twitter_text->setWidth(70);\r\n$twitter_text->setLeft(450);\r\n$twitter_text->setTop(210);\r\n$twitter_text->setColor(130, 127, 125);\r\n$twitter_text->setFontface('fonts/Lato-Regular.ttf');\r\n\r\n$canvas_figure = new GFigure(550, 250);\r\n$canvas_figure->setBackgroundColor(47, 42, 39);\r\n$canvas_figure->create();\r\n\r\n$avatar_box = new GFigure($avatar_image->getWidth() + 16, $avatar_image->getHeight() + 17);\r\n$avatar_box->setBackgroundColor(63, 56, 52);\r\n$avatar_box->setLeft($avatar_image->getLeft() - 7);\r\n$avatar_box->setTop($avatar_image->getTop() - 8);\r\n$avatar_box->create();\r\n\r\n$avatar_box2 = new GFigure($avatar_image->getWidth() + 3, $avatar_image->getHeight() + 19);\r\n$avatar_box2->setBackgroundColor(79, 72, 67);\r\n$avatar_box2->setLeft($avatar_image->getLeft() + 7);\r\n$avatar_box2->setTop($avatar_image->getTop() - 9);\r\n$avatar_box2->create();\r\n\r\n$avatar_box3 = new GFigure(120, 240);\r\n$avatar_box3->setBackgroundColor(63, 56, 52);\r\n$avatar_box3->create();\r\n\r\n$line_vertical = new GFigure(600, 10);\r\n$line_vertical->setBackgroundColor(119, 99, 77);\r\n$line_vertical->setTop(240);\r\n$line_vertical->create();\r\n\r\n$line_horizontal = new GFigure(1, 240);\r\n$line_horizontal->setBackgroundColor(79, 72, 67);\r\n$line_horizontal->setLeft(120);\r\n$line_horizontal->create();\r\n\r\n$canvas = new GCanvas();\r\n$canvas->from($canvas_figure);\r\n$canvas->append(array(\r\n  $line_horizontal,\r\n  $avatar_box2,\r\n  $avatar_box3,\r\n  $avatar_box,\r\n  $avatar_image,\r\n  $about_text,\r\n  $twitter_text,\r\n  $line_vertical\r\n));\r\n$canvas->toPNG();\r\n$canvas->draw();\r\n$canvas->save('card.png');\r\n```\r\n\r\n## Contribution\r\nIf you would like to contribute [pull requests](https://github.com/quintana-dev/gimage/pulls) and [issues](https://github.com/quintana-dev/gimage/issues) will be welcome! Feature requests are welcome. Please before sending some feature requests make sure provide as much detail and context as possible.\r\n\r\n## License\r\nMIT license\r\n\r\n© 2015 [José Luis Quintana](http://quintana.io)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}